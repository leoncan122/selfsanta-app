version: '3'

networks:
  front-net:
    driver: bridge
  back-net:
    driver: bridge

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    environment:
      - NGINX_SERVER_PORT=${NGINX_SERVER_PORT}
      - NGINX_SERVER_NAME=${NGINX_SERVER_NAME}
    ports:
      - "80:80"
    networks:
      - front-net
      - back-net
    depends_on:
      - web
      - api
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf  # Montamos la plantilla de configuración
      - react-build:/usr/share/nginx/html  # Volumen donde estarán los archivos estáticos generados
    # Iniciamos Nginx normalmente
    entrypoint: ["nginx", "-g", "daemon off;"]

  web:
    build:
      context: ..
      dockerfile: ./docker/web-Dockerfile
    networks:
      - front-net
      - back-net
    depends_on:
      - api
    volumes:
      - react-build:/app/dist  # Usamos un volumen compartido para los archivos de React

  api:
    build:
      context: ..
      dockerfile: ./docker/backend-Dockerfile
    networks:
      - back-net
      - front-net
    depends_on:
      - mongo
    expose:
      - "8000"

  mongo:
    image: mongo:latest
    container_name: mongo-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: example
      MONGO_INITDB_ROOT_PASSWORD: examplepassword
    volumes:
      - mongo-data:/data/db
    networks:
      - back-net
    expose:
      - "27017"  # Solo accesible dentro de la red de Docker

volumes:
  mongo-data:
    driver: local
  react-build:  # Volumen para almacenar los archivos de React generados
    driver: local
